#------------------------------------------------------------------------------
# Performance test Log4J configuration file
#
# Note:
#
#   Log4J instantiates any appenders found here, even if they are not used.
#
#------------------------------------------------------------------------------

log4j.debug = false

#------------------------------------------------------------------------------
# Loggers
# (Ensure additivity is false or you may be testing other appenders by mistake)
#------------------------------------------------------------------------------

log4j.logger.CONSOLE = INFO, CONSOLE
log4j.logger.CONSOLE.additivity = false

log4j.logger.DUMMY_INSTANT = INFO, DUMMY_INSTANT
log4j.logger.DUMMY_INSTANT.additivity = false

log4j.logger.DUMMY_4_MILLIS = INFO, DUMMY_4_MILLIS
log4j.logger.DUMMY_4_MILLIS.additivity = false

log4j.logger.JDBC_ASYNC = INFO, JDBC_ASYNC
log4j.additivity.JDBC_ASYNC = false

log4j.logger.JDBC_SYNC = INFO, JDBC_SYNC
log4j.additivity.JDBC_SYNC = false

log4j.logger.JDBC_BUNDLED = INFO, JDBC_BUNDLED
log4j.additivity.JDBC_BUNDLED = false

log4j.logger.JDBC_PLUS = INFO, JDBC_PLUS
log4j.additivity.JDBC_PLUS = false

#------------------------------------------------------------------------------
# Consoler Appender
#------------------------------------------------------------------------------

log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern= %d{HH:mm:ss,SSS} %-5p [%t] ndc="%x" cat="%c" class="%C" %m%n

#------------------------------------------------------------------------------
# Dummy Appender
#
# Stores elements in memory
#
# e.g. to simulate something that can process 100 msgs per second, 
# set sleepTimeMillis to 10
#------------------------------------------------------------------------------

log4j.appender.DUMMY_INSTANT = org.exaspace.log4jq.perf.DummyAppender
log4j.appender.DUMMY_INSTANT.sleepTimeMillis = 0 
log4j.appender.DUMMY_INSTANT.maxElements = 1000000

log4j.appender.DUMMY_4_MILLIS = org.exaspace.log4jq.perf.DummyAppender
log4j.appender.DUMMY_4_MILLIS.sleepTimeMillis = 4 
log4j.appender.DUMMY_4_MILLIS.maxElements = 1000000

#------------------------------------------------------------------------------
# Log4jq Appenders
#
# With the log4jq appenders you can use any prepared statement SQL 
#
# e.g. for a direct insert
#   INSERT INTO mylogtable (LogDate, Logger , Priority ,ThreadID , Context, Message , Trace) VALUES (getDate(), ?, ?, ?, ?, LEFT(ISNULL(?,''),7000), ?)
# or call a stored procedure
#   exec sp_log ?, ?, ?, ?, ?, ?
#
# gracefulShutdownTimeMillis = amount of time to allow to clear queue after shutdown  
#------------------------------------------------------------------------------

log4j.appender.JDBC_ASYNC = org.exaspace.log4jq.AsyncJdbcAppender
log4j.appender.JDBC_ASYNC.url = jdbc:sqlserver://localhost:1433;loginTimeout=10;database=logdb;applicationName=logtest;workstationID=mypc;
log4j.appender.JDBC_ASYNC.driver = com.microsoft.sqlserver.jdbc.SQLServerXADataSource
log4j.appender.JDBC_ASYNC.user = testing
log4j.appender.JDBC_ASYNC.password = testing
log4j.appender.JDBC_ASYNC.reconnectTimeMillis = 4000
log4j.appender.JDBC_ASYNC.sqlParamsSeparator = ,
log4j.appender.JDBC_ASYNC.sqlParams = %F:%L, %p, %t, %x, %m, %throwable
#log4j.appender.JDBC_ASYNC.sql = exec up_Log ?, ?, ?, ?, ?, ?
log4j.appender.JDBC_ASYNC.sql = INSERT INTO applog (LogDate, Logger , Priority ,ThreadID , Context, Message , Trace) VALUES (getDate(), ?, ?, ?, ?, LEFT(ISNULL(?,''),6000), ?)
log4j.appender.JDBC_ASYNC.locationInfo = true
log4j.appender.JDBC_ASYNC.maxElements = 500000
log4j.appender.JDBC_ASYNC.errorReportIntervalMillis = 30000
log4j.appender.JDBC_ASYNC.warningThreshold = 150000
log4j.appender.JDBC_ASYNC.gracefulShutdownTimeMillis = 600000

log4j.appender.JDBC_SYNC = org.exaspace.log4jq.DiscardingJdbcAppender
log4j.appender.JDBC_SYNC.url = jdbc:sqlserver://localhost:1433;loginTimeout=10;database=logdb;applicationName=logtest;workstationID=mypc;
log4j.appender.JDBC_SYNC.driver = com.microsoft.sqlserver.jdbc.SQLServerXADataSource
log4j.appender.JDBC_SYNC.user = testing
log4j.appender.JDBC_SYNC.password = testing
log4j.appender.JDBC_SYNC.reconnectTimeMillis = 4000
log4j.appender.JDBC_SYNC.sql = exec up_Log ?, ?, ?, ?, ?, ?
log4j.appender.JDBC_SYNC.sqlParams = %F:%L, %p, %t, %x, %m, %throwable
log4j.appender.JDBC_SYNC.sqlParamsSeparator = ,

#------------------------------------------------------------------------------
# The JDBC appender distributed with log4j (warning: does not escape SQL parameters!)
#------------------------------------------------------------------------------

log4j.appender.JDBC_BUNDLED = org.apache.log4j.jdbc.JDBCAppender
log4j.appender.JDBC_BUNDLED.URL = jdbc:sqlserver://localhost:1433;database=logdb
log4j.appender.JDBC_BUNDLED.driver = com.microsoft.sqlserver.jdbc.SQLServerXADataSource
log4j.appender.JDBC_BUNDLED.user = testing
log4j.appender.JDBC_BUNDLED.password = testing
log4j.appender.JDBC_BUNDLED.sql = INSERT INTO tblLog (LogDate, Logger , Priority ,ThreadID , Context, Message , Trace) VALUES (getDate(), '%c', '%p' ,'%t', '%x', LEFT(ISNULL('%m',''),7000), '%m')
log4j.appender.JDBC_BUNDLED.layout = org.apache.log4j.PatternLayout
log4j.appender.JDBC_BUNDLED.layout.ConversionPattern = %F:%L
log4j.appender.JDBC_BUNDLED.bufferSize = 1

#------------------------------------------------------------------------------------------------
# Another JDBC Appender (see http://www.mannhaupt.com/danko/projects/jdbcappender/doc/index.html)
#------------------------------------------------------------------------------------------------

log4j.appender.JDBC_PLUS=org.apache.log4j.jdbcplus.JDBCAppender
log4j.appender.JDBC_PLUS.url = jdbc:sqlserver://localhost:1433;database=logdb
log4j.appender.JDBC_PLUS.dbclass = com.microsoft.sqlserver.jdbc.SQLServerXADataSource
log4j.appender.JDBC_PLUS.username = testing
log4j.appender.JDBC_PLUS.password = unitTESTING
log4j.appender.JDBC_PLUS.sql=INSERT INTO tblLog (LogDate, Logger , Priority ,ThreadID , Context, Message , Trace) VALUES ('@TIMESTAMP@', '@LAYOUT:1@', '@PRIO@' ,'@THREAD@', '@NDC@', LEFT(ISNULL('@MSG@',''),7000),'@THROWABLE@')
log4j.appender.JDBC_PLUS.layout=org.apache.log4j.PatternLayout
log4j.appender.JDBC_PLUS.layout.ConversionPattern=%F:%L
log4j.appender.JDBC_PLUS.layoutPartsDelimiter=#
log4j.appender.JDBC_PLUS.buffer=1
log4j.appender.JDBC_PLUS.commit=true
log4j.appender.JDBC_PLUS.quoteReplace=true
log4j.appender.JDBC_PLUS.throwableMaxChars=10000

