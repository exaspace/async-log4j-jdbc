#
# See the example file under src/main for full documentation
#

log4j.logger.JDBC_ASYNC = DEBUG, JDBC_ASYNC
log4j.additivity.JDBC_ASYNC = false

log4j.appender.JDBC_ASYNC = org.exaspace.log4jq.AsyncJdbcAppender
log4j.appender.JDBC_ASYNC.url = jdbc:postgresql://postgres/postgres
log4j.appender.JDBC_ASYNC.driver = org.postgresql.Driver
log4j.appender.JDBC_ASYNC.user = postgres
log4j.appender.JDBC_ASYNC.password =
log4j.appender.JDBC_ASYNC.reconnectTimeMillis = 4000
log4j.appender.JDBC_ASYNC.locationInfo = true

# The max size of the memory queue (number of log messages)
# For the purposes of demo, we set this to a very small number!
# Normally you would set a much larger value of course!
log4j.appender.JDBC_ASYNC.maxElements = 500

# How often (in milliseconds) to report warnings (recommended at least 1000)
log4j.appender.JDBC_ASYNC.errorReportIntervalMillis = 3000

# Report a periodic warning if number of messages in queue exceeds the given value
# For the purposes of demo, we set this to half the maxElements in the memory buffer
log4j.appender.JDBC_ASYNC.warningThreshold = 250

# How long to process messages still in queue after shutdown
# set to -1 to exit immediately (will lose any messages still in memory)
log4j.appender.JDBC_ASYNC.gracefulShutdownTimeMillis = 5000

#Â For convenience the demo app will try to create an 'applog' table if it doesn't exist with the following structure:
#
# CREATE TABLE IF NOT EXISTS applog (
#      ID serial NOT NULL,
#      LogDate timestamp NOT NULL,
#      Logger varchar(100) NOT NULL,
#      Priority varchar(20) NOT NULL,
#      ThreadID varchar(50) NULL,
#      Context varchar(100) NOT NULL,
#      Message varchar(255) NULL,
#      Trace text NULL)
#
# You can create your own table of course (and update the SQL below used by the appender to insert log messages)

log4j.appender.JDBC_ASYNC.sql = INSERT INTO applog (LogDate, Logger, Priority, ThreadID, Context, Message, Trace) VALUES (now(), ?, ?, ?, ?, LEFT(COALESCE(?,''),6000), ?)
log4j.appender.JDBC_ASYNC.sqlParamsSeparator = ,
log4j.appender.JDBC_ASYNC.sqlParams = %F:%L, %p, %t, %x, %m, %throwable
